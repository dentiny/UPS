// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UA.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_UA_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_UA_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_UA_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_UA_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[12]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_UA_2eproto;
class AtoUCommand;
class AtoUCommandDefaultTypeInternal;
extern AtoUCommandDefaultTypeInternal _AtoUCommand_default_instance_;
class AtoULoadFinishRequest;
class AtoULoadFinishRequestDefaultTypeInternal;
extern AtoULoadFinishRequestDefaultTypeInternal _AtoULoadFinishRequest_default_instance_;
class AtoUPickupRequest;
class AtoUPickupRequestDefaultTypeInternal;
extern AtoUPickupRequestDefaultTypeInternal _AtoUPickupRequest_default_instance_;
class Delivery;
class DeliveryDefaultTypeInternal;
extern DeliveryDefaultTypeInternal _Delivery_default_instance_;
class ErrorMessage;
class ErrorMessageDefaultTypeInternal;
extern ErrorMessageDefaultTypeInternal _ErrorMessage_default_instance_;
class Product;
class ProductDefaultTypeInternal;
extern ProductDefaultTypeInternal _Product_default_instance_;
class ShipInfo;
class ShipInfoDefaultTypeInternal;
extern ShipInfoDefaultTypeInternal _ShipInfo_default_instance_;
class UserValidationRequest;
class UserValidationRequestDefaultTypeInternal;
extern UserValidationRequestDefaultTypeInternal _UserValidationRequest_default_instance_;
class UserValidationResponse;
class UserValidationResponseDefaultTypeInternal;
extern UserValidationResponseDefaultTypeInternal _UserValidationResponse_default_instance_;
class UtoACommand;
class UtoACommandDefaultTypeInternal;
extern UtoACommandDefaultTypeInternal _UtoACommand_default_instance_;
class UtoAConnect;
class UtoAConnectDefaultTypeInternal;
extern UtoAConnectDefaultTypeInternal _UtoAConnect_default_instance_;
class UtoALoadRequest;
class UtoALoadRequestDefaultTypeInternal;
extern UtoALoadRequestDefaultTypeInternal _UtoALoadRequest_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::AtoUCommand* Arena::CreateMaybeMessage<::AtoUCommand>(Arena*);
template<> ::AtoULoadFinishRequest* Arena::CreateMaybeMessage<::AtoULoadFinishRequest>(Arena*);
template<> ::AtoUPickupRequest* Arena::CreateMaybeMessage<::AtoUPickupRequest>(Arena*);
template<> ::Delivery* Arena::CreateMaybeMessage<::Delivery>(Arena*);
template<> ::ErrorMessage* Arena::CreateMaybeMessage<::ErrorMessage>(Arena*);
template<> ::Product* Arena::CreateMaybeMessage<::Product>(Arena*);
template<> ::ShipInfo* Arena::CreateMaybeMessage<::ShipInfo>(Arena*);
template<> ::UserValidationRequest* Arena::CreateMaybeMessage<::UserValidationRequest>(Arena*);
template<> ::UserValidationResponse* Arena::CreateMaybeMessage<::UserValidationResponse>(Arena*);
template<> ::UtoACommand* Arena::CreateMaybeMessage<::UtoACommand>(Arena*);
template<> ::UtoAConnect* Arena::CreateMaybeMessage<::UtoAConnect>(Arena*);
template<> ::UtoALoadRequest* Arena::CreateMaybeMessage<::UtoALoadRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class UtoAConnect :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:UtoAConnect) */ {
 public:
  UtoAConnect();
  virtual ~UtoAConnect();

  UtoAConnect(const UtoAConnect& from);
  UtoAConnect(UtoAConnect&& from) noexcept
    : UtoAConnect() {
    *this = ::std::move(from);
  }

  inline UtoAConnect& operator=(const UtoAConnect& from) {
    CopyFrom(from);
    return *this;
  }
  inline UtoAConnect& operator=(UtoAConnect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UtoAConnect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UtoAConnect* internal_default_instance() {
    return reinterpret_cast<const UtoAConnect*>(
               &_UtoAConnect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(UtoAConnect& a, UtoAConnect& b) {
    a.Swap(&b);
  }
  inline void Swap(UtoAConnect* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UtoAConnect* New() const final {
    return CreateMaybeMessage<UtoAConnect>(nullptr);
  }

  UtoAConnect* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UtoAConnect>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UtoAConnect& from);
  void MergeFrom(const UtoAConnect& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UtoAConnect* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "UtoAConnect";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_UA_2eproto);
    return ::descriptor_table_UA_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSeqNumFieldNumber = 1,
    kWorldIdFieldNumber = 2,
  };
  // required int64 seqNum = 1;
  bool has_seqnum() const;
  private:
  bool _internal_has_seqnum() const;
  public:
  void clear_seqnum();
  ::PROTOBUF_NAMESPACE_ID::int64 seqnum() const;
  void set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_seqnum() const;
  void _internal_set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 worldId = 2;
  bool has_worldid() const;
  private:
  bool _internal_has_worldid() const;
  public:
  void clear_worldid();
  ::PROTOBUF_NAMESPACE_ID::int64 worldid() const;
  void set_worldid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_worldid() const;
  void _internal_set_worldid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:UtoAConnect)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 seqnum_;
  ::PROTOBUF_NAMESPACE_ID::int64 worldid_;
  friend struct ::TableStruct_UA_2eproto;
};
// -------------------------------------------------------------------

class UserValidationRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:UserValidationRequest) */ {
 public:
  UserValidationRequest();
  virtual ~UserValidationRequest();

  UserValidationRequest(const UserValidationRequest& from);
  UserValidationRequest(UserValidationRequest&& from) noexcept
    : UserValidationRequest() {
    *this = ::std::move(from);
  }

  inline UserValidationRequest& operator=(const UserValidationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserValidationRequest& operator=(UserValidationRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UserValidationRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserValidationRequest* internal_default_instance() {
    return reinterpret_cast<const UserValidationRequest*>(
               &_UserValidationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(UserValidationRequest& a, UserValidationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UserValidationRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UserValidationRequest* New() const final {
    return CreateMaybeMessage<UserValidationRequest>(nullptr);
  }

  UserValidationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UserValidationRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UserValidationRequest& from);
  void MergeFrom(const UserValidationRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserValidationRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "UserValidationRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_UA_2eproto);
    return ::descriptor_table_UA_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUPSaccountFieldNumber = 2,
    kSeqNumFieldNumber = 1,
    kShipidFieldNumber = 3,
  };
  // required string UPSaccount = 2;
  bool has_upsaccount() const;
  private:
  bool _internal_has_upsaccount() const;
  public:
  void clear_upsaccount();
  const std::string& upsaccount() const;
  void set_upsaccount(const std::string& value);
  void set_upsaccount(std::string&& value);
  void set_upsaccount(const char* value);
  void set_upsaccount(const char* value, size_t size);
  std::string* mutable_upsaccount();
  std::string* release_upsaccount();
  void set_allocated_upsaccount(std::string* upsaccount);
  private:
  const std::string& _internal_upsaccount() const;
  void _internal_set_upsaccount(const std::string& value);
  std::string* _internal_mutable_upsaccount();
  public:

  // required int64 seqNum = 1;
  bool has_seqnum() const;
  private:
  bool _internal_has_seqnum() const;
  public:
  void clear_seqnum();
  ::PROTOBUF_NAMESPACE_ID::int64 seqnum() const;
  void set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_seqnum() const;
  void _internal_set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 shipid = 3;
  bool has_shipid() const;
  private:
  bool _internal_has_shipid() const;
  public:
  void clear_shipid();
  ::PROTOBUF_NAMESPACE_ID::int64 shipid() const;
  void set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_shipid() const;
  void _internal_set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:UserValidationRequest)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr upsaccount_;
  ::PROTOBUF_NAMESPACE_ID::int64 seqnum_;
  ::PROTOBUF_NAMESPACE_ID::int64 shipid_;
  friend struct ::TableStruct_UA_2eproto;
};
// -------------------------------------------------------------------

class UserValidationResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:UserValidationResponse) */ {
 public:
  UserValidationResponse();
  virtual ~UserValidationResponse();

  UserValidationResponse(const UserValidationResponse& from);
  UserValidationResponse(UserValidationResponse&& from) noexcept
    : UserValidationResponse() {
    *this = ::std::move(from);
  }

  inline UserValidationResponse& operator=(const UserValidationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserValidationResponse& operator=(UserValidationResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UserValidationResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UserValidationResponse* internal_default_instance() {
    return reinterpret_cast<const UserValidationResponse*>(
               &_UserValidationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(UserValidationResponse& a, UserValidationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UserValidationResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UserValidationResponse* New() const final {
    return CreateMaybeMessage<UserValidationResponse>(nullptr);
  }

  UserValidationResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UserValidationResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UserValidationResponse& from);
  void MergeFrom(const UserValidationResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UserValidationResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "UserValidationResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_UA_2eproto);
    return ::descriptor_table_UA_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSeqNumFieldNumber = 1,
    kShipidFieldNumber = 3,
    kResultFieldNumber = 2,
  };
  // required int64 seqNum = 1;
  bool has_seqnum() const;
  private:
  bool _internal_has_seqnum() const;
  public:
  void clear_seqnum();
  ::PROTOBUF_NAMESPACE_ID::int64 seqnum() const;
  void set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_seqnum() const;
  void _internal_set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 shipid = 3;
  bool has_shipid() const;
  private:
  bool _internal_has_shipid() const;
  public:
  void clear_shipid();
  ::PROTOBUF_NAMESPACE_ID::int64 shipid() const;
  void set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_shipid() const;
  void _internal_set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required bool result = 2;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  bool result() const;
  void set_result(bool value);
  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);
  public:

  // @@protoc_insertion_point(class_scope:UserValidationResponse)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 seqnum_;
  ::PROTOBUF_NAMESPACE_ID::int64 shipid_;
  bool result_;
  friend struct ::TableStruct_UA_2eproto;
};
// -------------------------------------------------------------------

class AtoUPickupRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AtoUPickupRequest) */ {
 public:
  AtoUPickupRequest();
  virtual ~AtoUPickupRequest();

  AtoUPickupRequest(const AtoUPickupRequest& from);
  AtoUPickupRequest(AtoUPickupRequest&& from) noexcept
    : AtoUPickupRequest() {
    *this = ::std::move(from);
  }

  inline AtoUPickupRequest& operator=(const AtoUPickupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AtoUPickupRequest& operator=(AtoUPickupRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AtoUPickupRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AtoUPickupRequest* internal_default_instance() {
    return reinterpret_cast<const AtoUPickupRequest*>(
               &_AtoUPickupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(AtoUPickupRequest& a, AtoUPickupRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AtoUPickupRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AtoUPickupRequest* New() const final {
    return CreateMaybeMessage<AtoUPickupRequest>(nullptr);
  }

  AtoUPickupRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AtoUPickupRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AtoUPickupRequest& from);
  void MergeFrom(const AtoUPickupRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AtoUPickupRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AtoUPickupRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_UA_2eproto);
    return ::descriptor_table_UA_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShipmentFieldNumber = 3,
    kSeqNumFieldNumber = 1,
    kWarehouseIdFieldNumber = 2,
  };
  // repeated .ShipInfo shipment = 3;
  int shipment_size() const;
  private:
  int _internal_shipment_size() const;
  public:
  void clear_shipment();
  ::ShipInfo* mutable_shipment(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ShipInfo >*
      mutable_shipment();
  private:
  const ::ShipInfo& _internal_shipment(int index) const;
  ::ShipInfo* _internal_add_shipment();
  public:
  const ::ShipInfo& shipment(int index) const;
  ::ShipInfo* add_shipment();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ShipInfo >&
      shipment() const;

  // required int64 seqNum = 1;
  bool has_seqnum() const;
  private:
  bool _internal_has_seqnum() const;
  public:
  void clear_seqnum();
  ::PROTOBUF_NAMESPACE_ID::int64 seqnum() const;
  void set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_seqnum() const;
  void _internal_set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 warehouseId = 2;
  bool has_warehouseid() const;
  private:
  bool _internal_has_warehouseid() const;
  public:
  void clear_warehouseid();
  ::PROTOBUF_NAMESPACE_ID::int64 warehouseid() const;
  void set_warehouseid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_warehouseid() const;
  void _internal_set_warehouseid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:AtoUPickupRequest)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ShipInfo > shipment_;
  ::PROTOBUF_NAMESPACE_ID::int64 seqnum_;
  ::PROTOBUF_NAMESPACE_ID::int64 warehouseid_;
  friend struct ::TableStruct_UA_2eproto;
};
// -------------------------------------------------------------------

class UtoALoadRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:UtoALoadRequest) */ {
 public:
  UtoALoadRequest();
  virtual ~UtoALoadRequest();

  UtoALoadRequest(const UtoALoadRequest& from);
  UtoALoadRequest(UtoALoadRequest&& from) noexcept
    : UtoALoadRequest() {
    *this = ::std::move(from);
  }

  inline UtoALoadRequest& operator=(const UtoALoadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UtoALoadRequest& operator=(UtoALoadRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UtoALoadRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UtoALoadRequest* internal_default_instance() {
    return reinterpret_cast<const UtoALoadRequest*>(
               &_UtoALoadRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(UtoALoadRequest& a, UtoALoadRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UtoALoadRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UtoALoadRequest* New() const final {
    return CreateMaybeMessage<UtoALoadRequest>(nullptr);
  }

  UtoALoadRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UtoALoadRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UtoALoadRequest& from);
  void MergeFrom(const UtoALoadRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UtoALoadRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "UtoALoadRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_UA_2eproto);
    return ::descriptor_table_UA_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShipIdFieldNumber = 4,
    kSeqNumFieldNumber = 1,
    kWarehouseIdFieldNumber = 2,
    kTruckIdFieldNumber = 3,
  };
  // repeated int64 shipId = 4;
  int shipid_size() const;
  private:
  int _internal_shipid_size() const;
  public:
  void clear_shipid();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_shipid(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_shipid() const;
  void _internal_add_shipid(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_shipid();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 shipid(int index) const;
  void set_shipid(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_shipid(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      shipid() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_shipid();

  // required int64 seqNum = 1;
  bool has_seqnum() const;
  private:
  bool _internal_has_seqnum() const;
  public:
  void clear_seqnum();
  ::PROTOBUF_NAMESPACE_ID::int64 seqnum() const;
  void set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_seqnum() const;
  void _internal_set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 warehouseId = 2;
  bool has_warehouseid() const;
  private:
  bool _internal_has_warehouseid() const;
  public:
  void clear_warehouseid();
  ::PROTOBUF_NAMESPACE_ID::int64 warehouseid() const;
  void set_warehouseid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_warehouseid() const;
  void _internal_set_warehouseid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 truckId = 3;
  bool has_truckid() const;
  private:
  bool _internal_has_truckid() const;
  public:
  void clear_truckid();
  ::PROTOBUF_NAMESPACE_ID::int64 truckid() const;
  void set_truckid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_truckid() const;
  void _internal_set_truckid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:UtoALoadRequest)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > shipid_;
  ::PROTOBUF_NAMESPACE_ID::int64 seqnum_;
  ::PROTOBUF_NAMESPACE_ID::int64 warehouseid_;
  ::PROTOBUF_NAMESPACE_ID::int64 truckid_;
  friend struct ::TableStruct_UA_2eproto;
};
// -------------------------------------------------------------------

class Product :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Product) */ {
 public:
  Product();
  virtual ~Product();

  Product(const Product& from);
  Product(Product&& from) noexcept
    : Product() {
    *this = ::std::move(from);
  }

  inline Product& operator=(const Product& from) {
    CopyFrom(from);
    return *this;
  }
  inline Product& operator=(Product&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Product& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Product* internal_default_instance() {
    return reinterpret_cast<const Product*>(
               &_Product_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Product& a, Product& b) {
    a.Swap(&b);
  }
  inline void Swap(Product* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Product* New() const final {
    return CreateMaybeMessage<Product>(nullptr);
  }

  Product* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Product>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Product& from);
  void MergeFrom(const Product& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Product* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Product";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_UA_2eproto);
    return ::descriptor_table_UA_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDescriptionFieldNumber = 1,
    kCountFieldNumber = 2,
  };
  // required string description = 1;
  bool has_description() const;
  private:
  bool _internal_has_description() const;
  public:
  void clear_description();
  const std::string& description() const;
  void set_description(const std::string& value);
  void set_description(std::string&& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  std::string* mutable_description();
  std::string* release_description();
  void set_allocated_description(std::string* description);
  private:
  const std::string& _internal_description() const;
  void _internal_set_description(const std::string& value);
  std::string* _internal_mutable_description();
  public:

  // required int32 count = 2;
  bool has_count() const;
  private:
  bool _internal_has_count() const;
  public:
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Product)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  friend struct ::TableStruct_UA_2eproto;
};
// -------------------------------------------------------------------

class ShipInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ShipInfo) */ {
 public:
  ShipInfo();
  virtual ~ShipInfo();

  ShipInfo(const ShipInfo& from);
  ShipInfo(ShipInfo&& from) noexcept
    : ShipInfo() {
    *this = ::std::move(from);
  }

  inline ShipInfo& operator=(const ShipInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShipInfo& operator=(ShipInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ShipInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ShipInfo* internal_default_instance() {
    return reinterpret_cast<const ShipInfo*>(
               &_ShipInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ShipInfo& a, ShipInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(ShipInfo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ShipInfo* New() const final {
    return CreateMaybeMessage<ShipInfo>(nullptr);
  }

  ShipInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ShipInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ShipInfo& from);
  void MergeFrom(const ShipInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ShipInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ShipInfo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_UA_2eproto);
    return ::descriptor_table_UA_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProductsFieldNumber = 3,
    kUPSaccountFieldNumber = 2,
    kShipIdFieldNumber = 1,
    kDestinationXFieldNumber = 4,
    kDestinationYFieldNumber = 5,
  };
  // repeated .Product products = 3;
  int products_size() const;
  private:
  int _internal_products_size() const;
  public:
  void clear_products();
  ::Product* mutable_products(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Product >*
      mutable_products();
  private:
  const ::Product& _internal_products(int index) const;
  ::Product* _internal_add_products();
  public:
  const ::Product& products(int index) const;
  ::Product* add_products();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Product >&
      products() const;

  // optional string UPSaccount = 2;
  bool has_upsaccount() const;
  private:
  bool _internal_has_upsaccount() const;
  public:
  void clear_upsaccount();
  const std::string& upsaccount() const;
  void set_upsaccount(const std::string& value);
  void set_upsaccount(std::string&& value);
  void set_upsaccount(const char* value);
  void set_upsaccount(const char* value, size_t size);
  std::string* mutable_upsaccount();
  std::string* release_upsaccount();
  void set_allocated_upsaccount(std::string* upsaccount);
  private:
  const std::string& _internal_upsaccount() const;
  void _internal_set_upsaccount(const std::string& value);
  std::string* _internal_mutable_upsaccount();
  public:

  // required int64 shipId = 1;
  bool has_shipid() const;
  private:
  bool _internal_has_shipid() const;
  public:
  void clear_shipid();
  ::PROTOBUF_NAMESPACE_ID::int64 shipid() const;
  void set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_shipid() const;
  void _internal_set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 destination_x = 4;
  bool has_destination_x() const;
  private:
  bool _internal_has_destination_x() const;
  public:
  void clear_destination_x();
  ::PROTOBUF_NAMESPACE_ID::int64 destination_x() const;
  void set_destination_x(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_destination_x() const;
  void _internal_set_destination_x(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 destination_y = 5;
  bool has_destination_y() const;
  private:
  bool _internal_has_destination_y() const;
  public:
  void clear_destination_y();
  ::PROTOBUF_NAMESPACE_ID::int64 destination_y() const;
  void set_destination_y(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_destination_y() const;
  void _internal_set_destination_y(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:ShipInfo)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Product > products_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr upsaccount_;
  ::PROTOBUF_NAMESPACE_ID::int64 shipid_;
  ::PROTOBUF_NAMESPACE_ID::int64 destination_x_;
  ::PROTOBUF_NAMESPACE_ID::int64 destination_y_;
  friend struct ::TableStruct_UA_2eproto;
};
// -------------------------------------------------------------------

class AtoULoadFinishRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AtoULoadFinishRequest) */ {
 public:
  AtoULoadFinishRequest();
  virtual ~AtoULoadFinishRequest();

  AtoULoadFinishRequest(const AtoULoadFinishRequest& from);
  AtoULoadFinishRequest(AtoULoadFinishRequest&& from) noexcept
    : AtoULoadFinishRequest() {
    *this = ::std::move(from);
  }

  inline AtoULoadFinishRequest& operator=(const AtoULoadFinishRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AtoULoadFinishRequest& operator=(AtoULoadFinishRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AtoULoadFinishRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AtoULoadFinishRequest* internal_default_instance() {
    return reinterpret_cast<const AtoULoadFinishRequest*>(
               &_AtoULoadFinishRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(AtoULoadFinishRequest& a, AtoULoadFinishRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AtoULoadFinishRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AtoULoadFinishRequest* New() const final {
    return CreateMaybeMessage<AtoULoadFinishRequest>(nullptr);
  }

  AtoULoadFinishRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AtoULoadFinishRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AtoULoadFinishRequest& from);
  void MergeFrom(const AtoULoadFinishRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AtoULoadFinishRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AtoULoadFinishRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_UA_2eproto);
    return ::descriptor_table_UA_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShipIdFieldNumber = 2,
    kSeqNumFieldNumber = 1,
    kTruckIdFieldNumber = 3,
  };
  // repeated int64 shipId = 2;
  int shipid_size() const;
  private:
  int _internal_shipid_size() const;
  public:
  void clear_shipid();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_shipid(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_shipid() const;
  void _internal_add_shipid(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_shipid();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 shipid(int index) const;
  void set_shipid(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_shipid(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      shipid() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_shipid();

  // required int64 seqNum = 1;
  bool has_seqnum() const;
  private:
  bool _internal_has_seqnum() const;
  public:
  void clear_seqnum();
  ::PROTOBUF_NAMESPACE_ID::int64 seqnum() const;
  void set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_seqnum() const;
  void _internal_set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 truckId = 3;
  bool has_truckid() const;
  private:
  bool _internal_has_truckid() const;
  public:
  void clear_truckid();
  ::PROTOBUF_NAMESPACE_ID::int64 truckid() const;
  void set_truckid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_truckid() const;
  void _internal_set_truckid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:AtoULoadFinishRequest)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > shipid_;
  ::PROTOBUF_NAMESPACE_ID::int64 seqnum_;
  ::PROTOBUF_NAMESPACE_ID::int64 truckid_;
  friend struct ::TableStruct_UA_2eproto;
};
// -------------------------------------------------------------------

class Delivery :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Delivery) */ {
 public:
  Delivery();
  virtual ~Delivery();

  Delivery(const Delivery& from);
  Delivery(Delivery&& from) noexcept
    : Delivery() {
    *this = ::std::move(from);
  }

  inline Delivery& operator=(const Delivery& from) {
    CopyFrom(from);
    return *this;
  }
  inline Delivery& operator=(Delivery&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Delivery& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Delivery* internal_default_instance() {
    return reinterpret_cast<const Delivery*>(
               &_Delivery_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(Delivery& a, Delivery& b) {
    a.Swap(&b);
  }
  inline void Swap(Delivery* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Delivery* New() const final {
    return CreateMaybeMessage<Delivery>(nullptr);
  }

  Delivery* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Delivery>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Delivery& from);
  void MergeFrom(const Delivery& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Delivery* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Delivery";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_UA_2eproto);
    return ::descriptor_table_UA_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSeqNumFieldNumber = 1,
    kShipIdFieldNumber = 2,
  };
  // required int64 seqNum = 1;
  bool has_seqnum() const;
  private:
  bool _internal_has_seqnum() const;
  public:
  void clear_seqnum();
  ::PROTOBUF_NAMESPACE_ID::int64 seqnum() const;
  void set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_seqnum() const;
  void _internal_set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 shipId = 2;
  bool has_shipid() const;
  private:
  bool _internal_has_shipid() const;
  public:
  void clear_shipid();
  ::PROTOBUF_NAMESPACE_ID::int64 shipid() const;
  void set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_shipid() const;
  void _internal_set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:Delivery)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 seqnum_;
  ::PROTOBUF_NAMESPACE_ID::int64 shipid_;
  friend struct ::TableStruct_UA_2eproto;
};
// -------------------------------------------------------------------

class AtoUCommand :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:AtoUCommand) */ {
 public:
  AtoUCommand();
  virtual ~AtoUCommand();

  AtoUCommand(const AtoUCommand& from);
  AtoUCommand(AtoUCommand&& from) noexcept
    : AtoUCommand() {
    *this = ::std::move(from);
  }

  inline AtoUCommand& operator=(const AtoUCommand& from) {
    CopyFrom(from);
    return *this;
  }
  inline AtoUCommand& operator=(AtoUCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AtoUCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AtoUCommand* internal_default_instance() {
    return reinterpret_cast<const AtoUCommand*>(
               &_AtoUCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(AtoUCommand& a, AtoUCommand& b) {
    a.Swap(&b);
  }
  inline void Swap(AtoUCommand* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AtoUCommand* New() const final {
    return CreateMaybeMessage<AtoUCommand>(nullptr);
  }

  AtoUCommand* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AtoUCommand>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AtoUCommand& from);
  void MergeFrom(const AtoUCommand& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AtoUCommand* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "AtoUCommand";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_UA_2eproto);
    return ::descriptor_table_UA_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUsrVlidFieldNumber = 1,
    kPikReqFieldNumber = 2,
    kLoadReqFieldNumber = 3,
    kErrMsgFieldNumber = 4,
    kAckFieldNumber = 5,
    kDisconnectionFieldNumber = 6,
  };
  // repeated .UserValidationRequest usrVlid = 1;
  int usrvlid_size() const;
  private:
  int _internal_usrvlid_size() const;
  public:
  void clear_usrvlid();
  ::UserValidationRequest* mutable_usrvlid(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::UserValidationRequest >*
      mutable_usrvlid();
  private:
  const ::UserValidationRequest& _internal_usrvlid(int index) const;
  ::UserValidationRequest* _internal_add_usrvlid();
  public:
  const ::UserValidationRequest& usrvlid(int index) const;
  ::UserValidationRequest* add_usrvlid();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::UserValidationRequest >&
      usrvlid() const;

  // repeated .AtoUPickupRequest pikReq = 2;
  int pikreq_size() const;
  private:
  int _internal_pikreq_size() const;
  public:
  void clear_pikreq();
  ::AtoUPickupRequest* mutable_pikreq(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AtoUPickupRequest >*
      mutable_pikreq();
  private:
  const ::AtoUPickupRequest& _internal_pikreq(int index) const;
  ::AtoUPickupRequest* _internal_add_pikreq();
  public:
  const ::AtoUPickupRequest& pikreq(int index) const;
  ::AtoUPickupRequest* add_pikreq();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AtoUPickupRequest >&
      pikreq() const;

  // repeated .AtoULoadFinishRequest loadReq = 3;
  int loadreq_size() const;
  private:
  int _internal_loadreq_size() const;
  public:
  void clear_loadreq();
  ::AtoULoadFinishRequest* mutable_loadreq(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AtoULoadFinishRequest >*
      mutable_loadreq();
  private:
  const ::AtoULoadFinishRequest& _internal_loadreq(int index) const;
  ::AtoULoadFinishRequest* _internal_add_loadreq();
  public:
  const ::AtoULoadFinishRequest& loadreq(int index) const;
  ::AtoULoadFinishRequest* add_loadreq();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AtoULoadFinishRequest >&
      loadreq() const;

  // repeated .ErrorMessage errMsg = 4;
  int errmsg_size() const;
  private:
  int _internal_errmsg_size() const;
  public:
  void clear_errmsg();
  ::ErrorMessage* mutable_errmsg(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ErrorMessage >*
      mutable_errmsg();
  private:
  const ::ErrorMessage& _internal_errmsg(int index) const;
  ::ErrorMessage* _internal_add_errmsg();
  public:
  const ::ErrorMessage& errmsg(int index) const;
  ::ErrorMessage* add_errmsg();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ErrorMessage >&
      errmsg() const;

  // repeated int64 ack = 5;
  int ack_size() const;
  private:
  int _internal_ack_size() const;
  public:
  void clear_ack();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ack(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_ack() const;
  void _internal_add_ack(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_ack();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 ack(int index) const;
  void set_ack(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_ack(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      ack() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_ack();

  // optional bool disconnection = 6;
  bool has_disconnection() const;
  private:
  bool _internal_has_disconnection() const;
  public:
  void clear_disconnection();
  bool disconnection() const;
  void set_disconnection(bool value);
  private:
  bool _internal_disconnection() const;
  void _internal_set_disconnection(bool value);
  public:

  // @@protoc_insertion_point(class_scope:AtoUCommand)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::UserValidationRequest > usrvlid_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AtoUPickupRequest > pikreq_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AtoULoadFinishRequest > loadreq_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ErrorMessage > errmsg_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > ack_;
  bool disconnection_;
  friend struct ::TableStruct_UA_2eproto;
};
// -------------------------------------------------------------------

class UtoACommand :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:UtoACommand) */ {
 public:
  UtoACommand();
  virtual ~UtoACommand();

  UtoACommand(const UtoACommand& from);
  UtoACommand(UtoACommand&& from) noexcept
    : UtoACommand() {
    *this = ::std::move(from);
  }

  inline UtoACommand& operator=(const UtoACommand& from) {
    CopyFrom(from);
    return *this;
  }
  inline UtoACommand& operator=(UtoACommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UtoACommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UtoACommand* internal_default_instance() {
    return reinterpret_cast<const UtoACommand*>(
               &_UtoACommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(UtoACommand& a, UtoACommand& b) {
    a.Swap(&b);
  }
  inline void Swap(UtoACommand* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UtoACommand* New() const final {
    return CreateMaybeMessage<UtoACommand>(nullptr);
  }

  UtoACommand* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UtoACommand>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UtoACommand& from);
  void MergeFrom(const UtoACommand& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UtoACommand* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "UtoACommand";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_UA_2eproto);
    return ::descriptor_table_UA_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConnectionFieldNumber = 1,
    kUsrVlidFieldNumber = 2,
    kLoadReqFieldNumber = 3,
    kDeliveryFieldNumber = 4,
    kErrMsgFieldNumber = 5,
    kAckFieldNumber = 6,
    kDisconnectionFieldNumber = 7,
  };
  // repeated .UtoAConnect connection = 1;
  int connection_size() const;
  private:
  int _internal_connection_size() const;
  public:
  void clear_connection();
  ::UtoAConnect* mutable_connection(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::UtoAConnect >*
      mutable_connection();
  private:
  const ::UtoAConnect& _internal_connection(int index) const;
  ::UtoAConnect* _internal_add_connection();
  public:
  const ::UtoAConnect& connection(int index) const;
  ::UtoAConnect* add_connection();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::UtoAConnect >&
      connection() const;

  // repeated .UserValidationResponse usrVlid = 2;
  int usrvlid_size() const;
  private:
  int _internal_usrvlid_size() const;
  public:
  void clear_usrvlid();
  ::UserValidationResponse* mutable_usrvlid(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::UserValidationResponse >*
      mutable_usrvlid();
  private:
  const ::UserValidationResponse& _internal_usrvlid(int index) const;
  ::UserValidationResponse* _internal_add_usrvlid();
  public:
  const ::UserValidationResponse& usrvlid(int index) const;
  ::UserValidationResponse* add_usrvlid();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::UserValidationResponse >&
      usrvlid() const;

  // repeated .UtoALoadRequest loadReq = 3;
  int loadreq_size() const;
  private:
  int _internal_loadreq_size() const;
  public:
  void clear_loadreq();
  ::UtoALoadRequest* mutable_loadreq(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::UtoALoadRequest >*
      mutable_loadreq();
  private:
  const ::UtoALoadRequest& _internal_loadreq(int index) const;
  ::UtoALoadRequest* _internal_add_loadreq();
  public:
  const ::UtoALoadRequest& loadreq(int index) const;
  ::UtoALoadRequest* add_loadreq();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::UtoALoadRequest >&
      loadreq() const;

  // repeated .Delivery delivery = 4;
  int delivery_size() const;
  private:
  int _internal_delivery_size() const;
  public:
  void clear_delivery();
  ::Delivery* mutable_delivery(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Delivery >*
      mutable_delivery();
  private:
  const ::Delivery& _internal_delivery(int index) const;
  ::Delivery* _internal_add_delivery();
  public:
  const ::Delivery& delivery(int index) const;
  ::Delivery* add_delivery();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Delivery >&
      delivery() const;

  // repeated .ErrorMessage errMsg = 5;
  int errmsg_size() const;
  private:
  int _internal_errmsg_size() const;
  public:
  void clear_errmsg();
  ::ErrorMessage* mutable_errmsg(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ErrorMessage >*
      mutable_errmsg();
  private:
  const ::ErrorMessage& _internal_errmsg(int index) const;
  ::ErrorMessage* _internal_add_errmsg();
  public:
  const ::ErrorMessage& errmsg(int index) const;
  ::ErrorMessage* add_errmsg();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ErrorMessage >&
      errmsg() const;

  // repeated int64 ack = 6;
  int ack_size() const;
  private:
  int _internal_ack_size() const;
  public:
  void clear_ack();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ack(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_ack() const;
  void _internal_add_ack(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_ack();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 ack(int index) const;
  void set_ack(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_ack(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      ack() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_ack();

  // optional bool disconnection = 7;
  bool has_disconnection() const;
  private:
  bool _internal_has_disconnection() const;
  public:
  void clear_disconnection();
  bool disconnection() const;
  void set_disconnection(bool value);
  private:
  bool _internal_disconnection() const;
  void _internal_set_disconnection(bool value);
  public:

  // @@protoc_insertion_point(class_scope:UtoACommand)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::UtoAConnect > connection_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::UserValidationResponse > usrvlid_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::UtoALoadRequest > loadreq_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Delivery > delivery_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ErrorMessage > errmsg_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > ack_;
  bool disconnection_;
  friend struct ::TableStruct_UA_2eproto;
};
// -------------------------------------------------------------------

class ErrorMessage :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ErrorMessage) */ {
 public:
  ErrorMessage();
  virtual ~ErrorMessage();

  ErrorMessage(const ErrorMessage& from);
  ErrorMessage(ErrorMessage&& from) noexcept
    : ErrorMessage() {
    *this = ::std::move(from);
  }

  inline ErrorMessage& operator=(const ErrorMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ErrorMessage& operator=(ErrorMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ErrorMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ErrorMessage* internal_default_instance() {
    return reinterpret_cast<const ErrorMessage*>(
               &_ErrorMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(ErrorMessage& a, ErrorMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(ErrorMessage* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ErrorMessage* New() const final {
    return CreateMaybeMessage<ErrorMessage>(nullptr);
  }

  ErrorMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ErrorMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ErrorMessage& from);
  void MergeFrom(const ErrorMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ErrorMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ErrorMessage";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_UA_2eproto);
    return ::descriptor_table_UA_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrFieldNumber = 1,
    kOriginseqnumFieldNumber = 2,
    kSeqNumFieldNumber = 3,
  };
  // required string err = 1;
  bool has_err() const;
  private:
  bool _internal_has_err() const;
  public:
  void clear_err();
  const std::string& err() const;
  void set_err(const std::string& value);
  void set_err(std::string&& value);
  void set_err(const char* value);
  void set_err(const char* value, size_t size);
  std::string* mutable_err();
  std::string* release_err();
  void set_allocated_err(std::string* err);
  private:
  const std::string& _internal_err() const;
  void _internal_set_err(const std::string& value);
  std::string* _internal_mutable_err();
  public:

  // required int64 originseqnum = 2;
  bool has_originseqnum() const;
  private:
  bool _internal_has_originseqnum() const;
  public:
  void clear_originseqnum();
  ::PROTOBUF_NAMESPACE_ID::int64 originseqnum() const;
  void set_originseqnum(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_originseqnum() const;
  void _internal_set_originseqnum(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 seqNum = 3;
  bool has_seqnum() const;
  private:
  bool _internal_has_seqnum() const;
  public:
  void clear_seqnum();
  ::PROTOBUF_NAMESPACE_ID::int64 seqnum() const;
  void set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_seqnum() const;
  void _internal_set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:ErrorMessage)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr err_;
  ::PROTOBUF_NAMESPACE_ID::int64 originseqnum_;
  ::PROTOBUF_NAMESPACE_ID::int64 seqnum_;
  friend struct ::TableStruct_UA_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UtoAConnect

// required int64 seqNum = 1;
inline bool UtoAConnect::_internal_has_seqnum() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool UtoAConnect::has_seqnum() const {
  return _internal_has_seqnum();
}
inline void UtoAConnect::clear_seqnum() {
  seqnum_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UtoAConnect::_internal_seqnum() const {
  return seqnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UtoAConnect::seqnum() const {
  // @@protoc_insertion_point(field_get:UtoAConnect.seqNum)
  return _internal_seqnum();
}
inline void UtoAConnect::_internal_set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  seqnum_ = value;
}
inline void UtoAConnect::set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_seqnum(value);
  // @@protoc_insertion_point(field_set:UtoAConnect.seqNum)
}

// required int64 worldId = 2;
inline bool UtoAConnect::_internal_has_worldid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool UtoAConnect::has_worldid() const {
  return _internal_has_worldid();
}
inline void UtoAConnect::clear_worldid() {
  worldid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UtoAConnect::_internal_worldid() const {
  return worldid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UtoAConnect::worldid() const {
  // @@protoc_insertion_point(field_get:UtoAConnect.worldId)
  return _internal_worldid();
}
inline void UtoAConnect::_internal_set_worldid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  worldid_ = value;
}
inline void UtoAConnect::set_worldid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_worldid(value);
  // @@protoc_insertion_point(field_set:UtoAConnect.worldId)
}

// -------------------------------------------------------------------

// UserValidationRequest

// required int64 seqNum = 1;
inline bool UserValidationRequest::_internal_has_seqnum() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool UserValidationRequest::has_seqnum() const {
  return _internal_has_seqnum();
}
inline void UserValidationRequest::clear_seqnum() {
  seqnum_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UserValidationRequest::_internal_seqnum() const {
  return seqnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UserValidationRequest::seqnum() const {
  // @@protoc_insertion_point(field_get:UserValidationRequest.seqNum)
  return _internal_seqnum();
}
inline void UserValidationRequest::_internal_set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  seqnum_ = value;
}
inline void UserValidationRequest::set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_seqnum(value);
  // @@protoc_insertion_point(field_set:UserValidationRequest.seqNum)
}

// required string UPSaccount = 2;
inline bool UserValidationRequest::_internal_has_upsaccount() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool UserValidationRequest::has_upsaccount() const {
  return _internal_has_upsaccount();
}
inline void UserValidationRequest::clear_upsaccount() {
  upsaccount_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& UserValidationRequest::upsaccount() const {
  // @@protoc_insertion_point(field_get:UserValidationRequest.UPSaccount)
  return _internal_upsaccount();
}
inline void UserValidationRequest::set_upsaccount(const std::string& value) {
  _internal_set_upsaccount(value);
  // @@protoc_insertion_point(field_set:UserValidationRequest.UPSaccount)
}
inline std::string* UserValidationRequest::mutable_upsaccount() {
  // @@protoc_insertion_point(field_mutable:UserValidationRequest.UPSaccount)
  return _internal_mutable_upsaccount();
}
inline const std::string& UserValidationRequest::_internal_upsaccount() const {
  return upsaccount_.GetNoArena();
}
inline void UserValidationRequest::_internal_set_upsaccount(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  upsaccount_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void UserValidationRequest::set_upsaccount(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  upsaccount_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserValidationRequest.UPSaccount)
}
inline void UserValidationRequest::set_upsaccount(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  upsaccount_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserValidationRequest.UPSaccount)
}
inline void UserValidationRequest::set_upsaccount(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  upsaccount_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserValidationRequest.UPSaccount)
}
inline std::string* UserValidationRequest::_internal_mutable_upsaccount() {
  _has_bits_[0] |= 0x00000001u;
  return upsaccount_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* UserValidationRequest::release_upsaccount() {
  // @@protoc_insertion_point(field_release:UserValidationRequest.UPSaccount)
  if (!_internal_has_upsaccount()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return upsaccount_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void UserValidationRequest::set_allocated_upsaccount(std::string* upsaccount) {
  if (upsaccount != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  upsaccount_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), upsaccount);
  // @@protoc_insertion_point(field_set_allocated:UserValidationRequest.UPSaccount)
}

// required int64 shipid = 3;
inline bool UserValidationRequest::_internal_has_shipid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool UserValidationRequest::has_shipid() const {
  return _internal_has_shipid();
}
inline void UserValidationRequest::clear_shipid() {
  shipid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UserValidationRequest::_internal_shipid() const {
  return shipid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UserValidationRequest::shipid() const {
  // @@protoc_insertion_point(field_get:UserValidationRequest.shipid)
  return _internal_shipid();
}
inline void UserValidationRequest::_internal_set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  shipid_ = value;
}
inline void UserValidationRequest::set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_shipid(value);
  // @@protoc_insertion_point(field_set:UserValidationRequest.shipid)
}

// -------------------------------------------------------------------

// UserValidationResponse

// required int64 seqNum = 1;
inline bool UserValidationResponse::_internal_has_seqnum() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool UserValidationResponse::has_seqnum() const {
  return _internal_has_seqnum();
}
inline void UserValidationResponse::clear_seqnum() {
  seqnum_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UserValidationResponse::_internal_seqnum() const {
  return seqnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UserValidationResponse::seqnum() const {
  // @@protoc_insertion_point(field_get:UserValidationResponse.seqNum)
  return _internal_seqnum();
}
inline void UserValidationResponse::_internal_set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  seqnum_ = value;
}
inline void UserValidationResponse::set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_seqnum(value);
  // @@protoc_insertion_point(field_set:UserValidationResponse.seqNum)
}

// required bool result = 2;
inline bool UserValidationResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool UserValidationResponse::has_result() const {
  return _internal_has_result();
}
inline void UserValidationResponse::clear_result() {
  result_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool UserValidationResponse::_internal_result() const {
  return result_;
}
inline bool UserValidationResponse::result() const {
  // @@protoc_insertion_point(field_get:UserValidationResponse.result)
  return _internal_result();
}
inline void UserValidationResponse::_internal_set_result(bool value) {
  _has_bits_[0] |= 0x00000004u;
  result_ = value;
}
inline void UserValidationResponse::set_result(bool value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:UserValidationResponse.result)
}

// required int64 shipid = 3;
inline bool UserValidationResponse::_internal_has_shipid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool UserValidationResponse::has_shipid() const {
  return _internal_has_shipid();
}
inline void UserValidationResponse::clear_shipid() {
  shipid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UserValidationResponse::_internal_shipid() const {
  return shipid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UserValidationResponse::shipid() const {
  // @@protoc_insertion_point(field_get:UserValidationResponse.shipid)
  return _internal_shipid();
}
inline void UserValidationResponse::_internal_set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  shipid_ = value;
}
inline void UserValidationResponse::set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_shipid(value);
  // @@protoc_insertion_point(field_set:UserValidationResponse.shipid)
}

// -------------------------------------------------------------------

// AtoUPickupRequest

// required int64 seqNum = 1;
inline bool AtoUPickupRequest::_internal_has_seqnum() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool AtoUPickupRequest::has_seqnum() const {
  return _internal_has_seqnum();
}
inline void AtoUPickupRequest::clear_seqnum() {
  seqnum_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AtoUPickupRequest::_internal_seqnum() const {
  return seqnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AtoUPickupRequest::seqnum() const {
  // @@protoc_insertion_point(field_get:AtoUPickupRequest.seqNum)
  return _internal_seqnum();
}
inline void AtoUPickupRequest::_internal_set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  seqnum_ = value;
}
inline void AtoUPickupRequest::set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_seqnum(value);
  // @@protoc_insertion_point(field_set:AtoUPickupRequest.seqNum)
}

// required int64 warehouseId = 2;
inline bool AtoUPickupRequest::_internal_has_warehouseid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool AtoUPickupRequest::has_warehouseid() const {
  return _internal_has_warehouseid();
}
inline void AtoUPickupRequest::clear_warehouseid() {
  warehouseid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AtoUPickupRequest::_internal_warehouseid() const {
  return warehouseid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AtoUPickupRequest::warehouseid() const {
  // @@protoc_insertion_point(field_get:AtoUPickupRequest.warehouseId)
  return _internal_warehouseid();
}
inline void AtoUPickupRequest::_internal_set_warehouseid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  warehouseid_ = value;
}
inline void AtoUPickupRequest::set_warehouseid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_warehouseid(value);
  // @@protoc_insertion_point(field_set:AtoUPickupRequest.warehouseId)
}

// repeated .ShipInfo shipment = 3;
inline int AtoUPickupRequest::_internal_shipment_size() const {
  return shipment_.size();
}
inline int AtoUPickupRequest::shipment_size() const {
  return _internal_shipment_size();
}
inline void AtoUPickupRequest::clear_shipment() {
  shipment_.Clear();
}
inline ::ShipInfo* AtoUPickupRequest::mutable_shipment(int index) {
  // @@protoc_insertion_point(field_mutable:AtoUPickupRequest.shipment)
  return shipment_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ShipInfo >*
AtoUPickupRequest::mutable_shipment() {
  // @@protoc_insertion_point(field_mutable_list:AtoUPickupRequest.shipment)
  return &shipment_;
}
inline const ::ShipInfo& AtoUPickupRequest::_internal_shipment(int index) const {
  return shipment_.Get(index);
}
inline const ::ShipInfo& AtoUPickupRequest::shipment(int index) const {
  // @@protoc_insertion_point(field_get:AtoUPickupRequest.shipment)
  return _internal_shipment(index);
}
inline ::ShipInfo* AtoUPickupRequest::_internal_add_shipment() {
  return shipment_.Add();
}
inline ::ShipInfo* AtoUPickupRequest::add_shipment() {
  // @@protoc_insertion_point(field_add:AtoUPickupRequest.shipment)
  return _internal_add_shipment();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ShipInfo >&
AtoUPickupRequest::shipment() const {
  // @@protoc_insertion_point(field_list:AtoUPickupRequest.shipment)
  return shipment_;
}

// -------------------------------------------------------------------

// UtoALoadRequest

// required int64 seqNum = 1;
inline bool UtoALoadRequest::_internal_has_seqnum() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool UtoALoadRequest::has_seqnum() const {
  return _internal_has_seqnum();
}
inline void UtoALoadRequest::clear_seqnum() {
  seqnum_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UtoALoadRequest::_internal_seqnum() const {
  return seqnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UtoALoadRequest::seqnum() const {
  // @@protoc_insertion_point(field_get:UtoALoadRequest.seqNum)
  return _internal_seqnum();
}
inline void UtoALoadRequest::_internal_set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  seqnum_ = value;
}
inline void UtoALoadRequest::set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_seqnum(value);
  // @@protoc_insertion_point(field_set:UtoALoadRequest.seqNum)
}

// required int64 warehouseId = 2;
inline bool UtoALoadRequest::_internal_has_warehouseid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool UtoALoadRequest::has_warehouseid() const {
  return _internal_has_warehouseid();
}
inline void UtoALoadRequest::clear_warehouseid() {
  warehouseid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UtoALoadRequest::_internal_warehouseid() const {
  return warehouseid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UtoALoadRequest::warehouseid() const {
  // @@protoc_insertion_point(field_get:UtoALoadRequest.warehouseId)
  return _internal_warehouseid();
}
inline void UtoALoadRequest::_internal_set_warehouseid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  warehouseid_ = value;
}
inline void UtoALoadRequest::set_warehouseid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_warehouseid(value);
  // @@protoc_insertion_point(field_set:UtoALoadRequest.warehouseId)
}

// required int64 truckId = 3;
inline bool UtoALoadRequest::_internal_has_truckid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool UtoALoadRequest::has_truckid() const {
  return _internal_has_truckid();
}
inline void UtoALoadRequest::clear_truckid() {
  truckid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UtoALoadRequest::_internal_truckid() const {
  return truckid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UtoALoadRequest::truckid() const {
  // @@protoc_insertion_point(field_get:UtoALoadRequest.truckId)
  return _internal_truckid();
}
inline void UtoALoadRequest::_internal_set_truckid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  truckid_ = value;
}
inline void UtoALoadRequest::set_truckid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_truckid(value);
  // @@protoc_insertion_point(field_set:UtoALoadRequest.truckId)
}

// repeated int64 shipId = 4;
inline int UtoALoadRequest::_internal_shipid_size() const {
  return shipid_.size();
}
inline int UtoALoadRequest::shipid_size() const {
  return _internal_shipid_size();
}
inline void UtoALoadRequest::clear_shipid() {
  shipid_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UtoALoadRequest::_internal_shipid(int index) const {
  return shipid_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UtoALoadRequest::shipid(int index) const {
  // @@protoc_insertion_point(field_get:UtoALoadRequest.shipId)
  return _internal_shipid(index);
}
inline void UtoALoadRequest::set_shipid(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  shipid_.Set(index, value);
  // @@protoc_insertion_point(field_set:UtoALoadRequest.shipId)
}
inline void UtoALoadRequest::_internal_add_shipid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  shipid_.Add(value);
}
inline void UtoALoadRequest::add_shipid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_shipid(value);
  // @@protoc_insertion_point(field_add:UtoALoadRequest.shipId)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
UtoALoadRequest::_internal_shipid() const {
  return shipid_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
UtoALoadRequest::shipid() const {
  // @@protoc_insertion_point(field_list:UtoALoadRequest.shipId)
  return _internal_shipid();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
UtoALoadRequest::_internal_mutable_shipid() {
  return &shipid_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
UtoALoadRequest::mutable_shipid() {
  // @@protoc_insertion_point(field_mutable_list:UtoALoadRequest.shipId)
  return _internal_mutable_shipid();
}

// -------------------------------------------------------------------

// Product

// required string description = 1;
inline bool Product::_internal_has_description() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Product::has_description() const {
  return _internal_has_description();
}
inline void Product::clear_description() {
  description_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Product::description() const {
  // @@protoc_insertion_point(field_get:Product.description)
  return _internal_description();
}
inline void Product::set_description(const std::string& value) {
  _internal_set_description(value);
  // @@protoc_insertion_point(field_set:Product.description)
}
inline std::string* Product::mutable_description() {
  // @@protoc_insertion_point(field_mutable:Product.description)
  return _internal_mutable_description();
}
inline const std::string& Product::_internal_description() const {
  return description_.GetNoArena();
}
inline void Product::_internal_set_description(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Product::set_description(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  description_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Product.description)
}
inline void Product::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Product.description)
}
inline void Product::set_description(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  description_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Product.description)
}
inline std::string* Product::_internal_mutable_description() {
  _has_bits_[0] |= 0x00000001u;
  return description_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Product::release_description() {
  // @@protoc_insertion_point(field_release:Product.description)
  if (!_internal_has_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return description_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Product::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  description_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:Product.description)
}

// required int32 count = 2;
inline bool Product::_internal_has_count() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Product::has_count() const {
  return _internal_has_count();
}
inline void Product::clear_count() {
  count_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Product::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Product::count() const {
  // @@protoc_insertion_point(field_get:Product.count)
  return _internal_count();
}
inline void Product::_internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  count_ = value;
}
inline void Product::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:Product.count)
}

// -------------------------------------------------------------------

// ShipInfo

// required int64 shipId = 1;
inline bool ShipInfo::_internal_has_shipid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ShipInfo::has_shipid() const {
  return _internal_has_shipid();
}
inline void ShipInfo::clear_shipid() {
  shipid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ShipInfo::_internal_shipid() const {
  return shipid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ShipInfo::shipid() const {
  // @@protoc_insertion_point(field_get:ShipInfo.shipId)
  return _internal_shipid();
}
inline void ShipInfo::_internal_set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  shipid_ = value;
}
inline void ShipInfo::set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_shipid(value);
  // @@protoc_insertion_point(field_set:ShipInfo.shipId)
}

// optional string UPSaccount = 2;
inline bool ShipInfo::_internal_has_upsaccount() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ShipInfo::has_upsaccount() const {
  return _internal_has_upsaccount();
}
inline void ShipInfo::clear_upsaccount() {
  upsaccount_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ShipInfo::upsaccount() const {
  // @@protoc_insertion_point(field_get:ShipInfo.UPSaccount)
  return _internal_upsaccount();
}
inline void ShipInfo::set_upsaccount(const std::string& value) {
  _internal_set_upsaccount(value);
  // @@protoc_insertion_point(field_set:ShipInfo.UPSaccount)
}
inline std::string* ShipInfo::mutable_upsaccount() {
  // @@protoc_insertion_point(field_mutable:ShipInfo.UPSaccount)
  return _internal_mutable_upsaccount();
}
inline const std::string& ShipInfo::_internal_upsaccount() const {
  return upsaccount_.GetNoArena();
}
inline void ShipInfo::_internal_set_upsaccount(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  upsaccount_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ShipInfo::set_upsaccount(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  upsaccount_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ShipInfo.UPSaccount)
}
inline void ShipInfo::set_upsaccount(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  upsaccount_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ShipInfo.UPSaccount)
}
inline void ShipInfo::set_upsaccount(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  upsaccount_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ShipInfo.UPSaccount)
}
inline std::string* ShipInfo::_internal_mutable_upsaccount() {
  _has_bits_[0] |= 0x00000001u;
  return upsaccount_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ShipInfo::release_upsaccount() {
  // @@protoc_insertion_point(field_release:ShipInfo.UPSaccount)
  if (!_internal_has_upsaccount()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return upsaccount_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ShipInfo::set_allocated_upsaccount(std::string* upsaccount) {
  if (upsaccount != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  upsaccount_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), upsaccount);
  // @@protoc_insertion_point(field_set_allocated:ShipInfo.UPSaccount)
}

// repeated .Product products = 3;
inline int ShipInfo::_internal_products_size() const {
  return products_.size();
}
inline int ShipInfo::products_size() const {
  return _internal_products_size();
}
inline void ShipInfo::clear_products() {
  products_.Clear();
}
inline ::Product* ShipInfo::mutable_products(int index) {
  // @@protoc_insertion_point(field_mutable:ShipInfo.products)
  return products_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Product >*
ShipInfo::mutable_products() {
  // @@protoc_insertion_point(field_mutable_list:ShipInfo.products)
  return &products_;
}
inline const ::Product& ShipInfo::_internal_products(int index) const {
  return products_.Get(index);
}
inline const ::Product& ShipInfo::products(int index) const {
  // @@protoc_insertion_point(field_get:ShipInfo.products)
  return _internal_products(index);
}
inline ::Product* ShipInfo::_internal_add_products() {
  return products_.Add();
}
inline ::Product* ShipInfo::add_products() {
  // @@protoc_insertion_point(field_add:ShipInfo.products)
  return _internal_add_products();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Product >&
ShipInfo::products() const {
  // @@protoc_insertion_point(field_list:ShipInfo.products)
  return products_;
}

// required int64 destination_x = 4;
inline bool ShipInfo::_internal_has_destination_x() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ShipInfo::has_destination_x() const {
  return _internal_has_destination_x();
}
inline void ShipInfo::clear_destination_x() {
  destination_x_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ShipInfo::_internal_destination_x() const {
  return destination_x_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ShipInfo::destination_x() const {
  // @@protoc_insertion_point(field_get:ShipInfo.destination_x)
  return _internal_destination_x();
}
inline void ShipInfo::_internal_set_destination_x(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  destination_x_ = value;
}
inline void ShipInfo::set_destination_x(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_destination_x(value);
  // @@protoc_insertion_point(field_set:ShipInfo.destination_x)
}

// required int64 destination_y = 5;
inline bool ShipInfo::_internal_has_destination_y() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ShipInfo::has_destination_y() const {
  return _internal_has_destination_y();
}
inline void ShipInfo::clear_destination_y() {
  destination_y_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ShipInfo::_internal_destination_y() const {
  return destination_y_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ShipInfo::destination_y() const {
  // @@protoc_insertion_point(field_get:ShipInfo.destination_y)
  return _internal_destination_y();
}
inline void ShipInfo::_internal_set_destination_y(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  destination_y_ = value;
}
inline void ShipInfo::set_destination_y(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_destination_y(value);
  // @@protoc_insertion_point(field_set:ShipInfo.destination_y)
}

// -------------------------------------------------------------------

// AtoULoadFinishRequest

// required int64 seqNum = 1;
inline bool AtoULoadFinishRequest::_internal_has_seqnum() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool AtoULoadFinishRequest::has_seqnum() const {
  return _internal_has_seqnum();
}
inline void AtoULoadFinishRequest::clear_seqnum() {
  seqnum_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AtoULoadFinishRequest::_internal_seqnum() const {
  return seqnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AtoULoadFinishRequest::seqnum() const {
  // @@protoc_insertion_point(field_get:AtoULoadFinishRequest.seqNum)
  return _internal_seqnum();
}
inline void AtoULoadFinishRequest::_internal_set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  seqnum_ = value;
}
inline void AtoULoadFinishRequest::set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_seqnum(value);
  // @@protoc_insertion_point(field_set:AtoULoadFinishRequest.seqNum)
}

// repeated int64 shipId = 2;
inline int AtoULoadFinishRequest::_internal_shipid_size() const {
  return shipid_.size();
}
inline int AtoULoadFinishRequest::shipid_size() const {
  return _internal_shipid_size();
}
inline void AtoULoadFinishRequest::clear_shipid() {
  shipid_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AtoULoadFinishRequest::_internal_shipid(int index) const {
  return shipid_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AtoULoadFinishRequest::shipid(int index) const {
  // @@protoc_insertion_point(field_get:AtoULoadFinishRequest.shipId)
  return _internal_shipid(index);
}
inline void AtoULoadFinishRequest::set_shipid(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  shipid_.Set(index, value);
  // @@protoc_insertion_point(field_set:AtoULoadFinishRequest.shipId)
}
inline void AtoULoadFinishRequest::_internal_add_shipid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  shipid_.Add(value);
}
inline void AtoULoadFinishRequest::add_shipid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_shipid(value);
  // @@protoc_insertion_point(field_add:AtoULoadFinishRequest.shipId)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
AtoULoadFinishRequest::_internal_shipid() const {
  return shipid_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
AtoULoadFinishRequest::shipid() const {
  // @@protoc_insertion_point(field_list:AtoULoadFinishRequest.shipId)
  return _internal_shipid();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
AtoULoadFinishRequest::_internal_mutable_shipid() {
  return &shipid_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
AtoULoadFinishRequest::mutable_shipid() {
  // @@protoc_insertion_point(field_mutable_list:AtoULoadFinishRequest.shipId)
  return _internal_mutable_shipid();
}

// required int64 truckId = 3;
inline bool AtoULoadFinishRequest::_internal_has_truckid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool AtoULoadFinishRequest::has_truckid() const {
  return _internal_has_truckid();
}
inline void AtoULoadFinishRequest::clear_truckid() {
  truckid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AtoULoadFinishRequest::_internal_truckid() const {
  return truckid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AtoULoadFinishRequest::truckid() const {
  // @@protoc_insertion_point(field_get:AtoULoadFinishRequest.truckId)
  return _internal_truckid();
}
inline void AtoULoadFinishRequest::_internal_set_truckid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  truckid_ = value;
}
inline void AtoULoadFinishRequest::set_truckid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_truckid(value);
  // @@protoc_insertion_point(field_set:AtoULoadFinishRequest.truckId)
}

// -------------------------------------------------------------------

// Delivery

// required int64 seqNum = 1;
inline bool Delivery::_internal_has_seqnum() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Delivery::has_seqnum() const {
  return _internal_has_seqnum();
}
inline void Delivery::clear_seqnum() {
  seqnum_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Delivery::_internal_seqnum() const {
  return seqnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Delivery::seqnum() const {
  // @@protoc_insertion_point(field_get:Delivery.seqNum)
  return _internal_seqnum();
}
inline void Delivery::_internal_set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  seqnum_ = value;
}
inline void Delivery::set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_seqnum(value);
  // @@protoc_insertion_point(field_set:Delivery.seqNum)
}

// required int64 shipId = 2;
inline bool Delivery::_internal_has_shipid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Delivery::has_shipid() const {
  return _internal_has_shipid();
}
inline void Delivery::clear_shipid() {
  shipid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Delivery::_internal_shipid() const {
  return shipid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Delivery::shipid() const {
  // @@protoc_insertion_point(field_get:Delivery.shipId)
  return _internal_shipid();
}
inline void Delivery::_internal_set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  shipid_ = value;
}
inline void Delivery::set_shipid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_shipid(value);
  // @@protoc_insertion_point(field_set:Delivery.shipId)
}

// -------------------------------------------------------------------

// AtoUCommand

// repeated .UserValidationRequest usrVlid = 1;
inline int AtoUCommand::_internal_usrvlid_size() const {
  return usrvlid_.size();
}
inline int AtoUCommand::usrvlid_size() const {
  return _internal_usrvlid_size();
}
inline void AtoUCommand::clear_usrvlid() {
  usrvlid_.Clear();
}
inline ::UserValidationRequest* AtoUCommand::mutable_usrvlid(int index) {
  // @@protoc_insertion_point(field_mutable:AtoUCommand.usrVlid)
  return usrvlid_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::UserValidationRequest >*
AtoUCommand::mutable_usrvlid() {
  // @@protoc_insertion_point(field_mutable_list:AtoUCommand.usrVlid)
  return &usrvlid_;
}
inline const ::UserValidationRequest& AtoUCommand::_internal_usrvlid(int index) const {
  return usrvlid_.Get(index);
}
inline const ::UserValidationRequest& AtoUCommand::usrvlid(int index) const {
  // @@protoc_insertion_point(field_get:AtoUCommand.usrVlid)
  return _internal_usrvlid(index);
}
inline ::UserValidationRequest* AtoUCommand::_internal_add_usrvlid() {
  return usrvlid_.Add();
}
inline ::UserValidationRequest* AtoUCommand::add_usrvlid() {
  // @@protoc_insertion_point(field_add:AtoUCommand.usrVlid)
  return _internal_add_usrvlid();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::UserValidationRequest >&
AtoUCommand::usrvlid() const {
  // @@protoc_insertion_point(field_list:AtoUCommand.usrVlid)
  return usrvlid_;
}

// repeated .AtoUPickupRequest pikReq = 2;
inline int AtoUCommand::_internal_pikreq_size() const {
  return pikreq_.size();
}
inline int AtoUCommand::pikreq_size() const {
  return _internal_pikreq_size();
}
inline void AtoUCommand::clear_pikreq() {
  pikreq_.Clear();
}
inline ::AtoUPickupRequest* AtoUCommand::mutable_pikreq(int index) {
  // @@protoc_insertion_point(field_mutable:AtoUCommand.pikReq)
  return pikreq_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AtoUPickupRequest >*
AtoUCommand::mutable_pikreq() {
  // @@protoc_insertion_point(field_mutable_list:AtoUCommand.pikReq)
  return &pikreq_;
}
inline const ::AtoUPickupRequest& AtoUCommand::_internal_pikreq(int index) const {
  return pikreq_.Get(index);
}
inline const ::AtoUPickupRequest& AtoUCommand::pikreq(int index) const {
  // @@protoc_insertion_point(field_get:AtoUCommand.pikReq)
  return _internal_pikreq(index);
}
inline ::AtoUPickupRequest* AtoUCommand::_internal_add_pikreq() {
  return pikreq_.Add();
}
inline ::AtoUPickupRequest* AtoUCommand::add_pikreq() {
  // @@protoc_insertion_point(field_add:AtoUCommand.pikReq)
  return _internal_add_pikreq();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AtoUPickupRequest >&
AtoUCommand::pikreq() const {
  // @@protoc_insertion_point(field_list:AtoUCommand.pikReq)
  return pikreq_;
}

// repeated .AtoULoadFinishRequest loadReq = 3;
inline int AtoUCommand::_internal_loadreq_size() const {
  return loadreq_.size();
}
inline int AtoUCommand::loadreq_size() const {
  return _internal_loadreq_size();
}
inline void AtoUCommand::clear_loadreq() {
  loadreq_.Clear();
}
inline ::AtoULoadFinishRequest* AtoUCommand::mutable_loadreq(int index) {
  // @@protoc_insertion_point(field_mutable:AtoUCommand.loadReq)
  return loadreq_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AtoULoadFinishRequest >*
AtoUCommand::mutable_loadreq() {
  // @@protoc_insertion_point(field_mutable_list:AtoUCommand.loadReq)
  return &loadreq_;
}
inline const ::AtoULoadFinishRequest& AtoUCommand::_internal_loadreq(int index) const {
  return loadreq_.Get(index);
}
inline const ::AtoULoadFinishRequest& AtoUCommand::loadreq(int index) const {
  // @@protoc_insertion_point(field_get:AtoUCommand.loadReq)
  return _internal_loadreq(index);
}
inline ::AtoULoadFinishRequest* AtoUCommand::_internal_add_loadreq() {
  return loadreq_.Add();
}
inline ::AtoULoadFinishRequest* AtoUCommand::add_loadreq() {
  // @@protoc_insertion_point(field_add:AtoUCommand.loadReq)
  return _internal_add_loadreq();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::AtoULoadFinishRequest >&
AtoUCommand::loadreq() const {
  // @@protoc_insertion_point(field_list:AtoUCommand.loadReq)
  return loadreq_;
}

// repeated .ErrorMessage errMsg = 4;
inline int AtoUCommand::_internal_errmsg_size() const {
  return errmsg_.size();
}
inline int AtoUCommand::errmsg_size() const {
  return _internal_errmsg_size();
}
inline void AtoUCommand::clear_errmsg() {
  errmsg_.Clear();
}
inline ::ErrorMessage* AtoUCommand::mutable_errmsg(int index) {
  // @@protoc_insertion_point(field_mutable:AtoUCommand.errMsg)
  return errmsg_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ErrorMessage >*
AtoUCommand::mutable_errmsg() {
  // @@protoc_insertion_point(field_mutable_list:AtoUCommand.errMsg)
  return &errmsg_;
}
inline const ::ErrorMessage& AtoUCommand::_internal_errmsg(int index) const {
  return errmsg_.Get(index);
}
inline const ::ErrorMessage& AtoUCommand::errmsg(int index) const {
  // @@protoc_insertion_point(field_get:AtoUCommand.errMsg)
  return _internal_errmsg(index);
}
inline ::ErrorMessage* AtoUCommand::_internal_add_errmsg() {
  return errmsg_.Add();
}
inline ::ErrorMessage* AtoUCommand::add_errmsg() {
  // @@protoc_insertion_point(field_add:AtoUCommand.errMsg)
  return _internal_add_errmsg();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ErrorMessage >&
AtoUCommand::errmsg() const {
  // @@protoc_insertion_point(field_list:AtoUCommand.errMsg)
  return errmsg_;
}

// repeated int64 ack = 5;
inline int AtoUCommand::_internal_ack_size() const {
  return ack_.size();
}
inline int AtoUCommand::ack_size() const {
  return _internal_ack_size();
}
inline void AtoUCommand::clear_ack() {
  ack_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AtoUCommand::_internal_ack(int index) const {
  return ack_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AtoUCommand::ack(int index) const {
  // @@protoc_insertion_point(field_get:AtoUCommand.ack)
  return _internal_ack(index);
}
inline void AtoUCommand::set_ack(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  ack_.Set(index, value);
  // @@protoc_insertion_point(field_set:AtoUCommand.ack)
}
inline void AtoUCommand::_internal_add_ack(::PROTOBUF_NAMESPACE_ID::int64 value) {
  ack_.Add(value);
}
inline void AtoUCommand::add_ack(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_ack(value);
  // @@protoc_insertion_point(field_add:AtoUCommand.ack)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
AtoUCommand::_internal_ack() const {
  return ack_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
AtoUCommand::ack() const {
  // @@protoc_insertion_point(field_list:AtoUCommand.ack)
  return _internal_ack();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
AtoUCommand::_internal_mutable_ack() {
  return &ack_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
AtoUCommand::mutable_ack() {
  // @@protoc_insertion_point(field_mutable_list:AtoUCommand.ack)
  return _internal_mutable_ack();
}

// optional bool disconnection = 6;
inline bool AtoUCommand::_internal_has_disconnection() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool AtoUCommand::has_disconnection() const {
  return _internal_has_disconnection();
}
inline void AtoUCommand::clear_disconnection() {
  disconnection_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool AtoUCommand::_internal_disconnection() const {
  return disconnection_;
}
inline bool AtoUCommand::disconnection() const {
  // @@protoc_insertion_point(field_get:AtoUCommand.disconnection)
  return _internal_disconnection();
}
inline void AtoUCommand::_internal_set_disconnection(bool value) {
  _has_bits_[0] |= 0x00000001u;
  disconnection_ = value;
}
inline void AtoUCommand::set_disconnection(bool value) {
  _internal_set_disconnection(value);
  // @@protoc_insertion_point(field_set:AtoUCommand.disconnection)
}

// -------------------------------------------------------------------

// UtoACommand

// repeated .UtoAConnect connection = 1;
inline int UtoACommand::_internal_connection_size() const {
  return connection_.size();
}
inline int UtoACommand::connection_size() const {
  return _internal_connection_size();
}
inline void UtoACommand::clear_connection() {
  connection_.Clear();
}
inline ::UtoAConnect* UtoACommand::mutable_connection(int index) {
  // @@protoc_insertion_point(field_mutable:UtoACommand.connection)
  return connection_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::UtoAConnect >*
UtoACommand::mutable_connection() {
  // @@protoc_insertion_point(field_mutable_list:UtoACommand.connection)
  return &connection_;
}
inline const ::UtoAConnect& UtoACommand::_internal_connection(int index) const {
  return connection_.Get(index);
}
inline const ::UtoAConnect& UtoACommand::connection(int index) const {
  // @@protoc_insertion_point(field_get:UtoACommand.connection)
  return _internal_connection(index);
}
inline ::UtoAConnect* UtoACommand::_internal_add_connection() {
  return connection_.Add();
}
inline ::UtoAConnect* UtoACommand::add_connection() {
  // @@protoc_insertion_point(field_add:UtoACommand.connection)
  return _internal_add_connection();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::UtoAConnect >&
UtoACommand::connection() const {
  // @@protoc_insertion_point(field_list:UtoACommand.connection)
  return connection_;
}

// repeated .UserValidationResponse usrVlid = 2;
inline int UtoACommand::_internal_usrvlid_size() const {
  return usrvlid_.size();
}
inline int UtoACommand::usrvlid_size() const {
  return _internal_usrvlid_size();
}
inline void UtoACommand::clear_usrvlid() {
  usrvlid_.Clear();
}
inline ::UserValidationResponse* UtoACommand::mutable_usrvlid(int index) {
  // @@protoc_insertion_point(field_mutable:UtoACommand.usrVlid)
  return usrvlid_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::UserValidationResponse >*
UtoACommand::mutable_usrvlid() {
  // @@protoc_insertion_point(field_mutable_list:UtoACommand.usrVlid)
  return &usrvlid_;
}
inline const ::UserValidationResponse& UtoACommand::_internal_usrvlid(int index) const {
  return usrvlid_.Get(index);
}
inline const ::UserValidationResponse& UtoACommand::usrvlid(int index) const {
  // @@protoc_insertion_point(field_get:UtoACommand.usrVlid)
  return _internal_usrvlid(index);
}
inline ::UserValidationResponse* UtoACommand::_internal_add_usrvlid() {
  return usrvlid_.Add();
}
inline ::UserValidationResponse* UtoACommand::add_usrvlid() {
  // @@protoc_insertion_point(field_add:UtoACommand.usrVlid)
  return _internal_add_usrvlid();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::UserValidationResponse >&
UtoACommand::usrvlid() const {
  // @@protoc_insertion_point(field_list:UtoACommand.usrVlid)
  return usrvlid_;
}

// repeated .UtoALoadRequest loadReq = 3;
inline int UtoACommand::_internal_loadreq_size() const {
  return loadreq_.size();
}
inline int UtoACommand::loadreq_size() const {
  return _internal_loadreq_size();
}
inline void UtoACommand::clear_loadreq() {
  loadreq_.Clear();
}
inline ::UtoALoadRequest* UtoACommand::mutable_loadreq(int index) {
  // @@protoc_insertion_point(field_mutable:UtoACommand.loadReq)
  return loadreq_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::UtoALoadRequest >*
UtoACommand::mutable_loadreq() {
  // @@protoc_insertion_point(field_mutable_list:UtoACommand.loadReq)
  return &loadreq_;
}
inline const ::UtoALoadRequest& UtoACommand::_internal_loadreq(int index) const {
  return loadreq_.Get(index);
}
inline const ::UtoALoadRequest& UtoACommand::loadreq(int index) const {
  // @@protoc_insertion_point(field_get:UtoACommand.loadReq)
  return _internal_loadreq(index);
}
inline ::UtoALoadRequest* UtoACommand::_internal_add_loadreq() {
  return loadreq_.Add();
}
inline ::UtoALoadRequest* UtoACommand::add_loadreq() {
  // @@protoc_insertion_point(field_add:UtoACommand.loadReq)
  return _internal_add_loadreq();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::UtoALoadRequest >&
UtoACommand::loadreq() const {
  // @@protoc_insertion_point(field_list:UtoACommand.loadReq)
  return loadreq_;
}

// repeated .Delivery delivery = 4;
inline int UtoACommand::_internal_delivery_size() const {
  return delivery_.size();
}
inline int UtoACommand::delivery_size() const {
  return _internal_delivery_size();
}
inline void UtoACommand::clear_delivery() {
  delivery_.Clear();
}
inline ::Delivery* UtoACommand::mutable_delivery(int index) {
  // @@protoc_insertion_point(field_mutable:UtoACommand.delivery)
  return delivery_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Delivery >*
UtoACommand::mutable_delivery() {
  // @@protoc_insertion_point(field_mutable_list:UtoACommand.delivery)
  return &delivery_;
}
inline const ::Delivery& UtoACommand::_internal_delivery(int index) const {
  return delivery_.Get(index);
}
inline const ::Delivery& UtoACommand::delivery(int index) const {
  // @@protoc_insertion_point(field_get:UtoACommand.delivery)
  return _internal_delivery(index);
}
inline ::Delivery* UtoACommand::_internal_add_delivery() {
  return delivery_.Add();
}
inline ::Delivery* UtoACommand::add_delivery() {
  // @@protoc_insertion_point(field_add:UtoACommand.delivery)
  return _internal_add_delivery();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Delivery >&
UtoACommand::delivery() const {
  // @@protoc_insertion_point(field_list:UtoACommand.delivery)
  return delivery_;
}

// repeated .ErrorMessage errMsg = 5;
inline int UtoACommand::_internal_errmsg_size() const {
  return errmsg_.size();
}
inline int UtoACommand::errmsg_size() const {
  return _internal_errmsg_size();
}
inline void UtoACommand::clear_errmsg() {
  errmsg_.Clear();
}
inline ::ErrorMessage* UtoACommand::mutable_errmsg(int index) {
  // @@protoc_insertion_point(field_mutable:UtoACommand.errMsg)
  return errmsg_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ErrorMessage >*
UtoACommand::mutable_errmsg() {
  // @@protoc_insertion_point(field_mutable_list:UtoACommand.errMsg)
  return &errmsg_;
}
inline const ::ErrorMessage& UtoACommand::_internal_errmsg(int index) const {
  return errmsg_.Get(index);
}
inline const ::ErrorMessage& UtoACommand::errmsg(int index) const {
  // @@protoc_insertion_point(field_get:UtoACommand.errMsg)
  return _internal_errmsg(index);
}
inline ::ErrorMessage* UtoACommand::_internal_add_errmsg() {
  return errmsg_.Add();
}
inline ::ErrorMessage* UtoACommand::add_errmsg() {
  // @@protoc_insertion_point(field_add:UtoACommand.errMsg)
  return _internal_add_errmsg();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ErrorMessage >&
UtoACommand::errmsg() const {
  // @@protoc_insertion_point(field_list:UtoACommand.errMsg)
  return errmsg_;
}

// repeated int64 ack = 6;
inline int UtoACommand::_internal_ack_size() const {
  return ack_.size();
}
inline int UtoACommand::ack_size() const {
  return _internal_ack_size();
}
inline void UtoACommand::clear_ack() {
  ack_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UtoACommand::_internal_ack(int index) const {
  return ack_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UtoACommand::ack(int index) const {
  // @@protoc_insertion_point(field_get:UtoACommand.ack)
  return _internal_ack(index);
}
inline void UtoACommand::set_ack(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  ack_.Set(index, value);
  // @@protoc_insertion_point(field_set:UtoACommand.ack)
}
inline void UtoACommand::_internal_add_ack(::PROTOBUF_NAMESPACE_ID::int64 value) {
  ack_.Add(value);
}
inline void UtoACommand::add_ack(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_ack(value);
  // @@protoc_insertion_point(field_add:UtoACommand.ack)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
UtoACommand::_internal_ack() const {
  return ack_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
UtoACommand::ack() const {
  // @@protoc_insertion_point(field_list:UtoACommand.ack)
  return _internal_ack();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
UtoACommand::_internal_mutable_ack() {
  return &ack_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
UtoACommand::mutable_ack() {
  // @@protoc_insertion_point(field_mutable_list:UtoACommand.ack)
  return _internal_mutable_ack();
}

// optional bool disconnection = 7;
inline bool UtoACommand::_internal_has_disconnection() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool UtoACommand::has_disconnection() const {
  return _internal_has_disconnection();
}
inline void UtoACommand::clear_disconnection() {
  disconnection_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool UtoACommand::_internal_disconnection() const {
  return disconnection_;
}
inline bool UtoACommand::disconnection() const {
  // @@protoc_insertion_point(field_get:UtoACommand.disconnection)
  return _internal_disconnection();
}
inline void UtoACommand::_internal_set_disconnection(bool value) {
  _has_bits_[0] |= 0x00000001u;
  disconnection_ = value;
}
inline void UtoACommand::set_disconnection(bool value) {
  _internal_set_disconnection(value);
  // @@protoc_insertion_point(field_set:UtoACommand.disconnection)
}

// -------------------------------------------------------------------

// ErrorMessage

// required string err = 1;
inline bool ErrorMessage::_internal_has_err() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ErrorMessage::has_err() const {
  return _internal_has_err();
}
inline void ErrorMessage::clear_err() {
  err_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ErrorMessage::err() const {
  // @@protoc_insertion_point(field_get:ErrorMessage.err)
  return _internal_err();
}
inline void ErrorMessage::set_err(const std::string& value) {
  _internal_set_err(value);
  // @@protoc_insertion_point(field_set:ErrorMessage.err)
}
inline std::string* ErrorMessage::mutable_err() {
  // @@protoc_insertion_point(field_mutable:ErrorMessage.err)
  return _internal_mutable_err();
}
inline const std::string& ErrorMessage::_internal_err() const {
  return err_.GetNoArena();
}
inline void ErrorMessage::_internal_set_err(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  err_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ErrorMessage::set_err(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  err_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ErrorMessage.err)
}
inline void ErrorMessage::set_err(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  err_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ErrorMessage.err)
}
inline void ErrorMessage::set_err(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  err_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ErrorMessage.err)
}
inline std::string* ErrorMessage::_internal_mutable_err() {
  _has_bits_[0] |= 0x00000001u;
  return err_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ErrorMessage::release_err() {
  // @@protoc_insertion_point(field_release:ErrorMessage.err)
  if (!_internal_has_err()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return err_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ErrorMessage::set_allocated_err(std::string* err) {
  if (err != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  err_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:ErrorMessage.err)
}

// required int64 originseqnum = 2;
inline bool ErrorMessage::_internal_has_originseqnum() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ErrorMessage::has_originseqnum() const {
  return _internal_has_originseqnum();
}
inline void ErrorMessage::clear_originseqnum() {
  originseqnum_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ErrorMessage::_internal_originseqnum() const {
  return originseqnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ErrorMessage::originseqnum() const {
  // @@protoc_insertion_point(field_get:ErrorMessage.originseqnum)
  return _internal_originseqnum();
}
inline void ErrorMessage::_internal_set_originseqnum(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  originseqnum_ = value;
}
inline void ErrorMessage::set_originseqnum(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_originseqnum(value);
  // @@protoc_insertion_point(field_set:ErrorMessage.originseqnum)
}

// required int64 seqNum = 3;
inline bool ErrorMessage::_internal_has_seqnum() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ErrorMessage::has_seqnum() const {
  return _internal_has_seqnum();
}
inline void ErrorMessage::clear_seqnum() {
  seqnum_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ErrorMessage::_internal_seqnum() const {
  return seqnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ErrorMessage::seqnum() const {
  // @@protoc_insertion_point(field_get:ErrorMessage.seqNum)
  return _internal_seqnum();
}
inline void ErrorMessage::_internal_set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  seqnum_ = value;
}
inline void ErrorMessage::set_seqnum(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_seqnum(value);
  // @@protoc_insertion_point(field_set:ErrorMessage.seqNum)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_UA_2eproto
